% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_group_frequency.R
\name{calculate_group_frequency}
\alias{calculate_group_frequency}
\title{Calculate group frequency for all unique combinations}
\usage{
calculate_group_frequency(
  unique_combinations,
  all_diseases,
  outcome_positions,
  min_freq = 0,
  tots,
  use_outcome = FALSE
)
}
\arguments{
\item{unique_combinations}{List of unique combinations of disease positions for a given number of combinations, generated using \code{unique_combos}.}

\item{all_diseases}{List of positions associated with each disease, generated using \code{get_disease_counts()}.}

\item{outcome_positions}{Numeric vector where each element refers to a record that suffered a particular outcome.}

\item{min_freq}{Number between 0 and 1; minimum proportion of code combinations to be included in the stem. If \code{outcome_column} is passed, \code{min_freq} is the minimum event rate per combination to be considered.}

\item{tots}{Numeric, total length of \code{comorbid_column} initially profiled to calculate frequency proportions to compare against \code{min_freq}.}

\item{use_outcome}{Logical if to use outcome variable for stem generation.}
}
\value{
data.frame ordered from lowest to highest proportion of those suffering outcomes (if \code{outcome_positions} entered) or number of records associated with that combination (if no \code{outcome_positions} entered).
}
\description{
Generate an ordered data.frame of different disease combinations on the basis of the most frequent or most strongly associated with outcomes.
}
\examples{
disease_counts = list(c(1), c(1,4), c(1,2,3,4), c(1))
unique_pos = structure(c(1, 1, 1, 2, 2, 3, 2, 3, 4, 3, 4, 4), .Dim = c(6L, 2L))

calculate_group_frequency(unique_combinations = unique_pos,
all_diseases = disease_counts,
outcome_positions = 0, tots = 4)

calculate_group_frequency(unique_combinations = unique_pos,
all_diseases = disease_counts,
outcome_positions = c(0,1,1,0), tots = 4)

}
